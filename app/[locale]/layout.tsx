import type {Metadata} from "next";
import localFont from "next/font/local";
import "./globals.css";
import {Locale} from "@/app.config";
import React from "react";
import {getMessages} from "next-intl/server";
import {auth} from "@/auth";
import {NextIntlClientProvider} from "next-intl";
import ReactQueryProviders from "@/src/providers/react-query-provider";
import {AuthProvider} from "@/src/providers/next-auth-provider";
import {AutoLogoutProvider} from "@/src/providers/auto-logout-provider";
import {ThemeProvider} from "@/src/providers/theme-provider";
import {Toaster} from "@/components/ui/sonner";

const geistSans = localFont({
    src: "./fonts/GeistVF.woff",
    variable: "--font-geist-sans",
    weight: "100 900",
});
const geistMono = localFont({
    src: "./fonts/GeistMonoVF.woff",
    variable: "--font-geist-mono",
    weight: "100 900",
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

type Props = {
    children: React.ReactNode;
    params: {
        locale: Locale;
    };
};


const RootLayout: React.FC<Props> = async ({children, params}) => {

    const session = await auth();

    const messages = await getMessages();

    const {locale} = await params;
    return (
        <html
            lang={locale}
            suppressHydrationWarning
            translate="no"
            className="notranslate"
        >
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <NextIntlClientProvider messages={messages}>
            <ReactQueryProviders>
                <AuthProvider session={session}>
                    <AutoLogoutProvider>
                        <ThemeProvider>
                            {children}
                             <Toaster richColors position="top-right" expand closeButton />
                        </ThemeProvider>
                    </AutoLogoutProvider>
                </AuthProvider>
            </ReactQueryProviders>
        </NextIntlClientProvider>
        </body>
        </html>
    );
}
export default RootLayout;
